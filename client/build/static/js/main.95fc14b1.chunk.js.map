{"version":3,"sources":["components/BooksNavbar/BooksNavbar.js","components/SearchForm/SearchForm.js","utils/clientAPI.js","components/BookList/BookList.js","pages/Search.js","pages/Saved.js","App.js","index.js"],"names":["BooksNavbar","react_default","a","createElement","Navbar","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","eventKey","className","window","location","pathname","SearchForm","props","Form","Row","Col","xs","sm","Control","name","type","value","search","placeholder","onChange","handleInputChange","size","Button","onClick","handleFormSubmit","API","searchGoogleBooks","query","apiURL","axios","get","getSavedBooks","saveBook","book","post","deleteSavedBook","delete","BookList","books","length","react_flip_move_es","map","key","_id","Image","src","image","saved","then","res","console","log","updateSearchResults","catch","err","handleSaveBook","loadSavedBooks","link","title","authors","join","description","Search","state","searchResults","error","handleBookData","bookData","volumeInfo","imageLinks","thumbnail","infoLink","event","_this","setState","target","preventDefault","data","status","Error","message","items","newResults","find","o","Container","fluid","Jumbotron","SearchForm_SearchForm","this","BookList_BookList","Component","Saved","savedBooks","App","BrowserRouter","BooksNavbar_BooksNavbar","Route","exact","path","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.95fc14b1.chunk.js","sourcesContent":["import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\n\nfunction BooksNavbar() {\n\n//    let navEventKey = \"saved\";\n   \n//    const handleNavSelect = eventKey => {\n//       console.log(\"active nav: \", eventKey)\n//       eventKey = eventKey;\n//    };\n\n   return (\n      <Navbar expand=\"sm\" bg=\"secondary\" variant=\"dark\">\n         <Navbar.Brand href=\"#home\">Google Books Search</Navbar.Brand>\n         <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n         <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav>\n               <Nav.Link\n                  eventKey=\"saved\"\n                  href=\"/saved\"\n                  // active={window.location.pathname === \"/saved\"} // <-- the react-bootstrap way of setting active nav item\n                  className={window.location.pathname === \"/saved\" ? \"active font-weight-bold\" : \"\"}\n               >Saved</Nav.Link>\n               <Nav.Link\n                  eventKey=\"search\"\n                  href=\"/search\"\n                  className={window.location.pathname === \"/search\" ? \"active font-weight-bold\" : \"\"}\n               >Search</Nav.Link>\n            </Nav>\n         </Navbar.Collapse>\n        \n      </Navbar>\n   );\n}\n\nexport default BooksNavbar;","import React from \"react\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport \"./style.css\";\n\n// use datalist element to create autofill suggestions based on props.breeds array\n\nfunction SearchForm(props) {\n    \n   return (\n\n        <Form >\n            <Form.Row>\n               <Col xs=\"9\" sm=\"10\">\n                {/* <Form.Label htmlFor=\"book-search\">Search</Form.Label> */}\n                <Form.Control\n                    id= \"book-search\"\n                    name=\"book-input\"\n                    type=\"text\"\n                    value={props.search}\n                    placeholder=\"Search by book title\"\n                    onChange={props.handleInputChange}\n                    size=\"lg\"\n                />\n                </Col>\n                <Col xs=\"3\" sm=\"2\">\n                <Button\n                    type=\"submit\"\n                    size=\"lg\"\n                    onClick={props.handleFormSubmit}\n                >Search\n                </Button>\n                </Col>\n            </Form.Row>\n        </Form>\n   );\n}\n\nexport default SearchForm;","import axios from \"axios\";\n\nexport const API = {\n\n   // SEARCH google books api\n   searchGoogleBooks: (query) => {\n      const BASEURL = \"https://www.googleapis.com/books/v1/volumes?q=\";  // google books api search query path\n      const APIKEY = \"AIzaSyDelCyGPERUd7VQLmWqucLtxHxFBmAD-Y8\";         // my key\n   \n      let apiURL = BASEURL + query  // concatenate path and query\n   \n      return axios.get(apiURL)      // send the query to google books api\n  },\n\n   // GET all saved books from db\n   getSavedBooks: () => axios.get(\"/api/books\"),\n  \n\n   // CREATE a book in the db\n   saveBook: (book) => axios.post(\"/api/books/\", book),\n  \n\n   // DELETE a book from the db by its mongodb _id\n   deleteSavedBook: (id) => axios.delete(\"/api/books/\" + id),\n\n};\n","import React, { Component, useState } from \"react\";\nimport \"./style.css\";\n\nimport { Container, Row, Col, Image, Button } from \"react-bootstrap\";\nimport { render } from \"react-dom\";\n\nimport FlipMove from \"react-flip-move\";\n\nimport { API } from \"../../utils/clientAPI\";\n\n// class  SearchResults extends Component {\n    \nfunction BookList(props) {\n\n    // const [books, setBookSaved] = useState(false);\n   \n    const handleSaveBook = book => { \n        \n        // check if book has already been saved (only checks by UI state)\n        // *** TODO *** make a check by db \n        if (!book.saved) {\n            // save book to database\n            API.saveBook(book)\n            .then(res => {\n                console.log(res);\n                props.updateSearchResults(book);\n            })\n            .catch(err => console.log(err));\n        }\n    };\n    \n    const handleRemoveBook = id => {\n        console.log(\"book._id: \", id);\n        API.deleteSavedBook(id)\n            .then(res =>  {\n                props.loadSavedBooks();\n                console.log(\"props._id, id: \", props._id, id);\n            })\n            .catch(err => console.log(err));\n    };\n    \n\n   return (\n      \n      <div >\n      \n      {props.books.length ? (\n         \n         <ul className=\"list-group search-results\">\n            <FlipMove>\n            {props.books.map(book => ( \n                <li key={book._id ? book._id : book.id} className=\"list-group-item\">\n                    \n                        <Row className=\"my-2\">\n                            \n                            <Col xs=\"4\" sm=\"2\">\n                                <Image src={book.image}/>\n                            </Col>\n                            \n                            <Col xs=\"8\" sm=\"10\">\n                            {/* group buttons in div to float group but control spacing between buttons*/}\n                            <div className=\"float-right btn-grp\">\n                                {/*   render Save or Remove (book) button depending on existence of db id\n                                        to indicate whether book has been saved or not */}\n                                {!book._id || book.saved\n                                    ?  <Button\n                                        variant={book.saved ? \"success\" : \"outline-success\"} className=\"save-btn mr-1\"\n                                        onClick={() => handleSaveBook(book)}\n                                        >\n                                        {book.saved ? \"Saved\" : \"Save\"}\n                                        </Button>\n                                    :  <Button\n                                        variant=\"outline-danger\" className=\"save-btn mr-1\"\n                                        onClick={() => handleRemoveBook(book._id)}\n                                        >Remove</Button>\n                                }     \n                                <Button variant=\"outline-primary\" className=\"save-btn\"\n                                    href={book.link}\n                                    >View</Button>\n                            </div>\n                            \n                                <h3>{book.title}</h3>\n                                {/* {book.description\n                                    ? <h5 className=\"font-italic\">{book.volumeInfo.subtitle}</h5>\n                                    : \"\"} */}\n                                <p>Author(s): {book.authors.join(\", \")}</p>\n                                <p className=\"book-description\">{book.description}</p>\n                            </Col>\n\n                        </Row>\n                    \n                </li>\n\n            ))}\n            </FlipMove>\n         </ul>\n      )\n      :\n         (<h3 className=\"ml-3 leads\"> No Results </h3>\n      )}\n      </div>\n   );\n}\n// }\nexport default BookList;","import React, { Component } from \"react\";\nimport { Container, Row, Col, Jumbotron } from \"react-bootstrap\"\n\nimport SearchForm from \"../components/SearchForm/SearchForm\";\nimport BookList from \"../components/BookList/BookList\";\nimport { API } from \"../utils/clientAPI\";\n\nclass Search extends Component {\n    state = {\n        search: \"\",\n        books: [],\n        searchResults: [],\n        error: \"\"\n    };\n\n    handleBookData = bookData => {\n        //   make a db book model object\n        let authors     =   bookData.volumeInfo.authors || \"N/A\";\n        let image       =   bookData.volumeInfo.imageLinks === \"undefined\"\n                                ? \"https://via.placeholder.com/128x206\"\n                                : bookData.volumeInfo.imageLinks.thumbnail;\n                \n        let book = {\n            id:             bookData.id,\n            title:          bookData.volumeInfo.title,\n            authors:        authors,\n            description:    bookData.volumeInfo.description,\n            image:          image,\n            link:           bookData.volumeInfo.infoLink    \n        };\n        return book;\n    };\n\n    handleInputChange = event => {\n        this.setState({ search: event.target.value });\n    }\n\n    // search for book with Google Books API\n    handleFormSubmit = event => {\n       event.preventDefault();\n       \n       API.searchGoogleBooks(this.state.search)\n         .then(res => {\n            if (res.data.status === \"error\") {\n               throw new Error(res.data.message);\n            }\n            console.log(\"res.data.items: \", res.data.items);\n            let books = res.data.items.map(bookData => this.handleBookData(bookData));\n\n            this.setState({ searchResults: books, error: \"\", search: \"\"});\n         })\n    }\n\n    updateSearchResults = (book) => {\n        let newResults = this.state.searchResults;\n        \n        newResults.find(o => o.id === book.id).saved = true;\n        \n        this.setState({\n            searchResults: newResults\n        });\n    }\n\n    render() {\n        return (\n            <div>\n               <Container fluid>\n                  <Jumbotron className=\"text-center\">\n                     <h1>Google Books Search</h1>\n                  </Jumbotron>\n                  <Row>\n                     \n                     <Col sm=\"12\">                           \n                        <SearchForm\n                           search               = {this.state.search}\n                           handleInputChange    = {this.handleInputChange}\n                           handleFormSubmit     = {this.handleFormSubmit}\n                        />\n                        <br></br>\n                     </Col>\n                     \n                     <Col sm=\"12\">\n                        <BookList\n                            books               = {this.state.searchResults}\n                            updateSearchResults = {this.updateSearchResults}\n                        />\n                     </Col>\n                  </Row>\n               </Container>\n            </div>\n        );\n    }\n\n}\n\nexport default Search;","import React, { Component } from \"react\";\nimport { Container, Row, Col, Jumbotron } from \"react-bootstrap\"\n\nimport BookList from \"../components/BookList/BookList\";\n\nimport { API } from \"../utils/clientAPI\";\n\nexport default class Saved extends Component { // <-- another way of declaring export default when defining\n   \n    state = {\n        savedBooks: []\n    };\n\n    componentDidMount() {\n        this.loadSavedBooks();\n    };\n\n    loadSavedBooks = () => {\n        API.getSavedBooks()\n            .then(res => this.setState({ savedBooks: res.data }))\n            .catch(err => console.log(err));\n    };\n\n    render() {\n            return (\n            <div>\n            <Container fluid>\n                <Jumbotron className=\"text-center\">\n                <h1>Saved Books</h1>\n                </Jumbotron>\n                <Row>\n                <Col sm=\"12\">\n                        <BookList\n                            books           = {this.state.savedBooks}\n                            loadSavedBooks  = {this.loadSavedBooks}\n                        />\n                </Col>\n                </Row>\n            </Container>\n        </div>\n            );\n        }\n}\n\n","import React, {Component} from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport BooksNavbar from \"./components/BooksNavbar/BooksNavbar\";\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\n\nimport \"./App.css\"\n\n// import Books from \"./pages/Books\";\n// import Nav from \"./components/Nav\";\n\n\n\nclass App extends Component {\n \n   render() {\n      return (\n         \n            <Router>\n                  <div className=\"body-div\">\n                     <BooksNavbar />\n                     <Container>\n                        <Row>\n                           <Col >\n                              <Route exact path=\"/\"        component={Saved} />\n                              <Route exact path=\"/saved\"   component={Saved} />\n                              <Route exact path=\"/search\"  component={Search} />\n                           </Col>\n                        </Row>\n                     </Container>\n                  </div>\n            </Router>\n      );\n   }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}